<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section01.xml.DynamicSqlMapper">
    <resultMap id="menuResultMap" type="com.ohgiraffers.common.MenuDTO">
        <id property="code" column="MENU_CODE"/>
        <result property="name" column="MENU_NAME"/>
        <result property="price" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>

    <!-- <if> 태그 : test 속성의 조건에 해당할 때만 엘리먼트 구문을 쿼리에 포함한다. -->
    <select id="selectMenuByPrice" parameterType="hashmap" resultMap="menuResultMap">
        SELECT
             A.MENU_CODE
           , A.MENU_NAME
           , A.MENU_PRICE
           , A.CATEGORY_CODE
           , A.ORDERABLE_STATUS
          FROM TBL_MENU A
         WHERE ORDERABLE_STATUS = 'Y'
        <if test="price gte 0 and price lte 10000">
            <![CDATA[
           AND A.MENU_PRICE < #{ price }
            ]]>
        </if>
        <if test="price gt 10000 and price lte 20000">
            AND A.MENU_PRICE BETWEEN 10000 AND #{ price }
        </if>
        <if test="price gt 20000 and price lte 30000">
            AND A.MENU_PRICE BETWEEN 20000 AND #{ price }
        </if>
        <if test="price gt 30000">
            AND A.MENU_PRICE BETWEEN 30000 AND #{ price }
        </if>
        ORDER BY A.MENU_CODE
    </select>

    <select id="searchMenu" parameterType="SearchCriteria" resultMap="menuResultMap">
        SELECT
             A.MENU_CODE
           , A.MENU_NAME
           , A.MENU_PRICE
           , A.CATEGORY_CODE
           , A.ORDERABLE_STATUS
          FROM TBL_MENU A
        <if test="condition == 'category'">
          JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
        </if>
         WHERE A.ORDERABLE_STATUS = 'Y'
        <if test="condition == 'name'">
           AND A.MENU_NAME LIKE CONCAT('%', #{ value }, '%')
        </if>
        <if test="condition == 'category'">
           AND B.CATEGORY_NAME = #{ value }
        </if>
         ORDER BY A.MENU_CODE
    </select>

    <!-- <choose>(when/otherwise) 태그 : java의 switch-case처럼 역할을 한다.
        <choose>
            <when test = "(조건)">
                쿼리구문
            </when>
            ...
            <otherwise>
                쿼리구문
            </otherwise>
        </choose>

        <when> 태그 test 속성 조건에 부합하면 <when> 엘리먼트 구문을 쿼리에 포함한다.
        어떠한 when 조건도 만족하지 못하면 <otherwise> 엘리먼트 구문을 쿼리에 포함한다.
    -->
    <select id="searchMenuBySupCategory" parameterType="SearchCriteria" resultMap="menuResultMap">
        SELECT
              A.MENU_CODE
            , A.MENU_NAME
            , A.MENU_PRICE
            , A.CATEGORY_CODE
            , A.ORDERABLE_STATUS
          FROM TBL_MENU A
         WHERE A.ORDERABLE_STATUS = 'Y'
        <choose>
            <when test="value == '식사'">
           AND A.CATEGORY_CODE IN (4,5,6,7)
            </when>
            <when test="value == '음료'">
           AND A.CATEGORY_CODE IN (8,9,10)
            </when>
            <otherwise>
           AND A.CATEGORY_CODE IN (11,12)
            </otherwise>
        </choose>
       ORDER BY A.MENU_CODE
    </select>

    <!-- <foreach> 태그 : java의 for문처럼 역할을 한다.
                      1. collection 속성 : 반복을 수행할 대상
                      2. item 속성 : 반복을 수행할 때마다 꺼내올 값의 이름 설정
                      3. open 속성 : <foreach> 엘리먼트 구문의 가장 앞에 올 문자
                      4. separator 속성 : 반복이 수행될 때 꺼내온 item 사이에 들어갈 문자
                      5. close 속성 : <foreach> 엘리먼트 구문의 마지막에 올 문자
    -->
    <select id="searchMenuByRandomMenuCode" parameterType="hashmap" resultMap="menuResultMap">
        SELECT
               A.MENU_CODE
             , A.MENU_NAME
             , A.MENU_PRICE
             , A.CATEGORY_CODE
             , A.ORDERABLE_STATUS
          FROM TBL_MENU A
         WHERE 1 = 1
           AND A.MENU_CODE IN
        <foreach collection="randomMenuCodeList" item="menuCode" open="(" separator=", " close=")">
            #{ menuCode }
        </foreach>
    </select>
</mapper>